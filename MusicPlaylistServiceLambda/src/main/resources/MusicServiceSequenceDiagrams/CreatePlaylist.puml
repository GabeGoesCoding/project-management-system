@startuml

actor "Client" as client
participant "API Gateway/Lambda" as apiGateway
participant "CreatePlaylistActivity" as createPlaylistActivity
participant "PlaylistDao" as playlistDao
database "DynamoDB" as dynamoDB

title Create Playlist

client -> apiGateway : HTTP Request
activate apiGateway

apiGateway -> createPlaylistActivity : CreatePlaylistRequest
activate createPlaylistActivity

createPlaylistActivity -> createPlaylistActivity : validate playlist name and customer ID from request

alt if name contains invalid characters
createPlaylistActivity --> apiGateway : throw InvalidAttributeValueException
apiGateway --> client : return 400 response

else else continue
end

createPlaylistActivity -> createPlaylistActivity : generatePlaylistId()

createPlaylistActivity -> createPlaylistActivity : create Set<Tags>
alt if the request contained no tags to add to the playlist
createPlaylistActivity -> createPlaylistActivity : provide null list of tags

else else continue
end

createPlaylistActivity -> playlistDao : createPlaylist(playlistId, playlistName, customerId, List<AlbumTrack>, Set<Tags>)
activate playlistDao

playlistDao -> dynamoDB : store playlist
activate dynamoDB

dynamoDB --> playlistDao : return 200 response
deactivate dynamoDB

playlistDao --> createPlaylistActivity : return new Playlist object
deactivate playlistDao

createPlaylistActivity -> createPlaylistActivity: create PlaylistModel

createPlaylistActivity -> createPlaylistActivity: PlaylistModel with saved Playlist database

createPlaylistActivity -> createPlaylistActivity: CreatePlaylistRequest CreatePlaylistResponse
createPlaylistActivity -> createPlaylistActivity: Set PlaylistModel field in CreatePlaylistResponse

createPlaylistActivity --> apiGateway : return CreatePlaylistResponse
deactivate createPlaylistActivity

apiGateway --> client : return 200 response with CreatePlaylistResponse data
deactivate apiGateway

@enduml