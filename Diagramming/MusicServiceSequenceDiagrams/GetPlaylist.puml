@startuml

actor "Client" as client
participant "API Gateway/Lambda" as apiGateway
participant "GetPlaylistActivity" as getPlaylistActivity
participant "PlaylistDao" as playlistDao
database "DynamoDB" as dynamoDB

title Get Playlist

client -> apiGateway : HTTP Request
activate apiGateway

apiGateway -> getPlaylistActivity : getPlaylistActivity

getPlaylistActivity -> playlistDao : getPlaylist(id)
activate playlistDao

playlistDao -> dynamoDB : lookup playlist (id)
activate dynamoDB

alt if playlist does not exist
dynamoDB --> playlistDao : return with no item database
playlistDao --> getPlaylistActivity : throw PlayListNotFoundException
getPlaylistActivity --> apiGateway : propagate PlayListNotFoundException
apiGateway --> client: return 400 response
else else continue
end

dynamoDB --> playlistDao: return playlist data
deactivate playlistDao

playlistDao --> getPlaylistActivity : return Playlist object
deactivate playlistDao

getPlaylistActivity --> getPlaylistActivity : create PlaylistModel

getPlaylistActivity --> getPlaylistActivity : set PlaylistModel with saved Playlist data

getPlaylistActivity -> getPlaylistActivity: create GetPlaylistResponse
getPlaylistActivity -> getPlaylistActivity: Set PlaylistModel field in GetPlaylistResponse

getPlaylistActivity --> apiGateway : return GetPlaylistResponse
deactivate getPlaylistActivity

apiGateway --> client : return 200 response with GetPlaylistResponse data
deactivate apiGateway

@enduml